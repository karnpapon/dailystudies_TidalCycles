let mute = const $ sound  "~"


-- liveset.
-- >>>>>>>>>> Track 1 ( Analog 4 jamming )


do
  bps (160/120)
  let modbeat = 16 
  let modtime = 12
  let customNotes = "{~ 0 0 7 14 12 14 ~ ~ }%16"
  let customNotes2 = "{19 ~ 14 12 14 7 0 0 ~}%16"
  let customNotes3 = (toScale Scales.harmonicMinor (run  12 ))
  let mute = const $ sound "~"
  d1 
    $ whenmod 12 10 ( |+|note 12 )
    $ (123 ~>)
    $ whenmod 10 5 ((|+|note (customNotes)).(|=|note (choose [0,12])) )
    $ foldEvery [3,4] (slow (wchoose [7,7,6,3] [2,4,6,8]))
    $ whenmod modbeat modtime ( always (stut' 3 (choose [0.125,0.125*3]) (|+|note (choose [ -12, 24 ])))) 
    $ often (stut' (choose [1,2,3]) (choose [0.125,0.125*3]) (|+| note (choose [-12]))) 
    $ whenmod modbeat modtime (|+|note 24)
    $ ( whenmod modbeat modtime (|+|note 12)).(|+| note (choose [12,24,36])) 
    $ whenmod 8 4 ( whenmod modbeat modtime ( #note (customNotes) )) 
    $ stack [
      every 3 (rev)
      -- $ every 5 (( #sound (samples "stabb" (irand 5)) ).(#cut 2))
      $ whenmod modbeat modtime (|+|note 3 )
      $ note (customNotes)
      # s "a4" 
      # midichan 2,
      (1 <~)
      $ every 4 (density 4)
      $ every 2 (density 4)
      $ foldEvery [3,4] ( (density 2) . ((#note (customNotes)). ( #sound "a4" ).(  #midichan 3 ) )  ) 
      $ sound "clubkick akuma5"
      #cut 1
      #gain 0.8
      #room 1
      #size (slow 16  $ scale 0.5  0.7  $ sine)
    ]
  d3
    $ slow 6 $ note ("<d4 cs4>" + chord "minor7")
    # sound "midi" #midichan 3 

-- -------------------------------------

d1 $ sound "a4" #midichan 1
d1 $ sound "a4" #midichan 2
d1 $ sound "a4" #midichan 3

-- steve reich
-- do
--   cps 1.0
--   d1 $ superimpose (fast 1.005) $ note "<0 7 10> <2 9>" # s "superpiano"

-- d1 $ do x <- slow (12 * 12) $ run 12
--         jux (rotR $ x/12) $ sound "cp ! ! ~ cp ! ~ cp ~ cp ! ~"



-- d1 $ sound ("bd sn kurt")
--    # fast 3 (vowel "e e o")

-- cps (-1)
-- cps 0.5
-- cps 1

-- do now <- getNow
--    d1 $ sound "bd*8" # gain ((pure $ toRational now) ~> (slow 1 $ envEq))


-- d1 $  note "e4 fs4 b4 cs5 d5 fs4 e4 cs5 b4 fs4 d5 cs5" # sound "superpiano" 

-- warp portals
do
  bps(80/120)
  d1
    $ stack [
      every 6 ( rev ) 
      $ note "{e4 c4 e5 g5 gs5 c5 e6 g6 gs6 g6 e5 c4}%32" 
      # s "a4"
      -- # octave (wchoose [7,1,1] [5,4,6])
      #midichan 0,
      note "{ c4 }%16" 
      # sound "a4" 
      #midichan 2,
      -- chop 4 $ every 3 ( stut' 16 0.125 (#coarse 4)) $ degradeBy 0.5 $ sound (samples  "foley*16" (irand 20) ) #unit "c" #cut 1,
      sound "{ [ bd:4 bd:4 bd:4 ~ ] [ [ bd:4 ~ ~ teks:1 ] ~ ~ ] [ bd:4 bd:4 bd:4 ~ ] [ [ bd:4 ~ ~ teks:1 ] ~ ~ ] [ bd:4 bd:4 bd:4 ~ ] [ [ bd:4 ~ ~ teks:1 ] ~ ~ ]}%4 "
      #gain 1.1
    ]

do
  bps(80/120)
  d1 
    $ stack [
      whenmod 8 4 (#note "{ ds4 as4 f5 g5 }%16") 
      $ note "{ f4 c4 g5 a5 }%16" 
      # sound "customSynth02" 
      #orbit 2
      #room 0.4
      #size (slow 16  $ scale 0.9  0.95  $ sine)
      # gain 1.1
      #sustain 1, 
      whenmod 8 4 (#note "ds as g") $ note " { <f _ [ g a ] as g> }%2 " 
      #sound "a4" 
      #octave 4
      #midichan 0,
      sound "{ [ bd:4 bd:4 bd:4 ~ ] [ [ bd:4 ~ ~ teks:1 ] ~ ~ ] [ bd:4 bd:4 bd:4 ~ ] [ [ bd:4 ~ ~ teks:1 ] ~ ~ ] [ bd:4 bd:4 bd:4 ~ ] [ [ bd:4 ~ ~ teks:1 ] ~ ~ ]}%4 "
      #orbit 1
    ]

d1 $ sound  (replicate 3 " bd:4 bd:2 bd:2 ~ ")

-- -------------------------------------

-- >>>>>>>>>> Track 2 (kosmische lagoon) 

do
  bps (80/120 )
  d1
    $ stack [
      midinote ( "[{ 0 4 7 11}%24 ]/ 2" + 48 + "[4 7]/11" )
      # sound "superpiano"
    ]
d1 $ sound "bd"
do
  cps 0.7
  d1 $ stack [
    midinote  ( "[{ 0 4 7 11}%24 ]/ 2" + 48 + "[4 7]/11" )
    # octave 5
    # sound "midi",
    whenmod 8 4 (#midinote "61 62" ) 
    $ struct "[1 1]/11" $ midinote "59" # sound "midi" #midichan 2,
    struct "[1 1]/11"   
    $ whenmod 8 4 (# midinote "55" )
    $ midinote "59" 
    # sound "midi" 
    #gain 0.6
    #midichan 3,
    -- foldEvery [3,4] (rev) 
    -- $ struct "{ 1 ! ~ 1 ~ ~ 1 ~ ~ 1 }%11" $ sound "clubkick:2"
    -- #shape 0.4
    -- #crush 5
    -- #cutoff 2000,
    sometimesBy  0.4 ( stut' 6 (0.126)(# coarse 5) )
    $ degradeBy 0.5
    $ foldEvery [2,4]( jux  ( ( #speed "2").(density 2) )  )
    $ every 2 ( density 2)
    $ sound ( samples "gltch*16" (irand 20))
    #gain 0.7
    #cut 1,
    stack [
      sound "bend/4",
      sound "teks:2/5" #unit "c" #speed (choose [(-1), 3.5]),
      sound "industrial:20/6" #speed "-1"
    ]
    #orbit 1
    #room 0.6
    #size (slow 16 $ scale 0.5 0.7 $ sine)
    ]


do
  cps 0.7
  t1 (xfadeIn 2 )
    $ sometimesBy  0.4 ( stut' 6 (0.126)(# coarse 5) )
    $ degradeBy 0.5
    $ every 5 ( struct "{ 1 ~ 1 ~ ~ 1 ~ 1 ~ ~ 1 }%8")
    $ every 4 (rev)
    $ foldEvery [2,4]( jux  ( ( #speed "2").(density 2) )  )
    $ every 2 ( density 2)
    $ sound ( samples "gltch*16" (irand 20))
    #gain 0.9
    #cut 1

d2 
$ sound "midi*8" 
#midichan 3 
#midicmd "control" 
#ctlNum 51
#control (slow 8 $ scale 0 120 $ sine)

-- >>>>>>>>> transition ( Kosmische Lagoon )>

d1 $ stack [
whenmod 8 4 (|=|note ("c4" + chord "minor"))
$ note ("d4" + chord "minor" )
#sound "midi" 
#midichan 4 ,
sometimesBy  0.4 ( stut' 6 (0.126)(# coarse 5) )
  $ degradeBy 0.5
  $ every 5 ( struct "{ 1 ~ 1 ~ ~ 1 ~ 1 ~ ~ 1 }%8")
  $ every 4 (rev)
  $ foldEvery [2,4]( jux  ( ( #speed "2").(density 2) )  )
  $ every 2 ( density 2)
  $ sound ( samples "gltch*16" (irand 20))
  #gain 0.9 
  #cut 1
]

-- >>>>>>>>> Track 3 ( Drum Invader ) >

cps 0.65


d1 $ sound "midi" #midichan 4


btime = 6
modtime = 5

d1 
$ whenmod btime modtime (#sound "speechh") 
$ foldEvery[2,4](666 ~>)
$ stack [
whenmod btime modtime (#sound "~")
$ every 2 (chop 4)
-- $ whenmod 12 6 ( #sound  "{ [smash stabb:5 ~ ~] akuma5:2 [smash:9  ~ ~ hh ] }%12 " )
$ slow 4
$ stut' (4)(0.125*3)(|=| crush 4)
$ sound (samples "stabb*4" (irand 15))
#cut 2,
whenmod btime modtime ( #sound "~")
$ degradeBy 0.2
$ density 2 
$ sound (samples "akuma5*8" (irand 15)) 
#unit "c" 
#speed 8,
slow 2 
$ struct "~ 1 [~ 1] ~" 
$ sound "smash"
]



let mute = const $ sound "~"

d1 
$ stack [ 
  midinote ( "[{ 0 4 7 11}%24 ]/ 2" + 48 + "[4 7]/11")
  #sound "a4"
  #octave ( wchoose [1,8,2] [4,5,6] ) ,
  slow 3
  $ density 2
  $ struct "[1 1]/5.5"
  $ sound "clubkick:5" #cutoff 6000,
  struct "[1 1]/11" 
  $ whenmod 8 4 (#midinote 59 )
  $ midinote 55
  # sound "a4" 
  # midichan 2,
  sometimes ( spread ($) [ rev, (#accelerate 2 ), (chop 4), (#crush 5 )] )
  $ stack [
    sometimesBy 0.4 ( stut' 6 ( 0.125 ) (#coarse 5))
    $ degradeBy 0.5 
    $ foldEvery [2,3,4] (jux ( (#speed 2). (density 2 ) ) )
    $ every 2 (density 2)
    $ sound ( samples "gltch*16" (irand 20) ) 
    #gain 0.65
    #cut 1,
    sound "bend/4" ,
    sound  "teks:2/5" #unit "c" #speed ( choose [-1, 3.5]),
    sound "industrial:20/3" #gain 0.5 #unit "s" #speed "-1"
  ] 
  #orbit 1
  #room 0.6 
  #size (slow 16  $ scale 0.6  0.8  $ sine)
] #crush 4



-- >>>>>>>>> Track 4 ( Khan Song) >

cps 0.5

let mute = const $ sound "~"

d1 $ stack [
  whenmod 8 4 (#note "{ as4 cs4 gs4 }%8") 
  $ every 2 (( fast 2 ).(#sustain 0.5)) 
  $ note "{ gs3 b4 ds4 }%8" 
  #octave (wchoose [1,8,2] [3,4,5]) 
  # sound "customSynth02" 
  #sustain 1 
  #shape 0.5
  #gain 1.34,
  -- mute $ whenmod 8 4 (#note "{ as4 [b4 ~] ~ d4 }") 
  -- $ every 2 (chop (choose [2,4,6]))
  -- $ foldEvery [2,3..5] (fast 2) 
  -- $ sound "supersaw" 
  -- # note (slow 2 "<gs4 b5 d4 [as4 cs4 f4]>") 
  -- #octave (choose [5,6]),
  sound "clubkick:1(3,8)" #orbit 2 #cutoff 700 #shape 0.67,
  mute $ whenmod 8 4 (#note "as4") 
  $ note "gs4" # sound "a4" 
  #nudge 0.14 
  #midichan 2, 
  whenmod 16 15 (#sound "~")
  $ whenmod 8 4 (|=|up "-6")
  $ foldEvery[2,3,4] (linger 0.125)
  $ striate' 32 (0.15)
  $ every 4 (jux (#resonance  0.05 ))
  $ sound "khan"
  -- # cutoff (slow 8 $ (scale 0.05 0.65 $ sine1 * 8000))
  -- # cutoff 1000 
  #orbit 1
  #room 0.6
  #size (slow 16 $ scale 0.9 0.99 $ sine)
  #up "-8"
  #end 0.3
  -- #crush (choose [1,2,2.5,6]) 
  #velocity (slow 16 $ sine)
]  






-------------------------------------------- End -------------------------------------------
-- optional.
-- >>>>>>>>>> Track 3


d1 $ merge (discretise (1/16)) $ sound "midi"

let fluxxx = spaceOut([1,0.95..0.5]++[0.25,0.3..1])

let pattern rotation notenumber = rotL rotation $ fluxxx $ n ("0*8" + (4 ~> (discretise (1/4) $ choose Scales.hirajoshi)) ) |+| n notenumber
    merge noteScale = stack[ pattern 0 0, pattern 0 (-12), pattern 0 (-24)]
          #velocity(slow 16 $ scale 0.25 0.6 $ sine)
          #dur(slow 16 $ scale 0.25 1 $ sine)
          |+|n noteScale





