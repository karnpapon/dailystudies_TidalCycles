-- exploring
-- 1. SpectralTricks effect in SuperCollider.

-- new learned function
-- 1. fit'.
-- 2. smear.
---------------------------------------------------------------------

import Sound.Tidal.SpectralTricks

d1 $ every 2 (# freeze 1)
$ weave 16 (smear saw # comb sine # binshift rand) [akuma4:2, akuma4:5, akuma4:7]
# hbrick (slow 64 $ saw)


d1
$ weave 16 (smear 0.5)
[sound "hang:1", sound "hang:5", sound "hang:2"]

d1 $ weave 16 (speed 2)
# sound "akuma4:2"


d1 $ sound "{hang:1 hang:5 hang:2}"


d1 $ every 4 (const $ sound "bd") $ sound "hh"

d1 $ s "pluck*2" # up (slow 8 "0 3 5 7")


d1 $ n "<[c3 e3 g3 b3] [d3 ~ ~ ~] ~ ~ >" # sound "superpiano"

d1 $ s "pluck" |*| up "[0,3,7]" |*| up (slow 8 "0 3 5 7")

d1 $ s "pluck" # up (slow 6 "<[0 3 5 7 9 11] [2 4 8 11 13 15]>")  -- slow can change cycle's lenght, in the otherwords, every "up" note can be played.

d1 $ s "pluck" # up ( "<0 3 5 7 9 11>")

do
  cps 1
  let progression p = p |*| up (slow 8 $ "0 5 10 7")
  let melody = progression $ stut 2 0.25 (-0.05) $ fast 2 $ up "0 3 7 10" |*| up "12" # s "pluck"
  let bass = progression $ s "pluck" |*| speed "0.5" |*| gain "1.0" # shape 0.6 # cut "-1"
  d1 $ stack [melody, bass]

  d1 $ stut 4 0.5 (-0.5) $ sound "bd sn"


-- fit 3 samples into 1 cycle
-- by "0 1 2" mapped to "bd sn arpy", respectively.
-- "0 1 2" is how pattern is played (according to mapped samples above).
-- results, bd > sn > arpy, plays in one cycle.
d1 $ sound (fit' 1 3 "0 1 2" "0 1 2" "bd sn arpy")

d1 $ fit' 1 3 (run 3) "0 1 2 " $ sound "bd sn arpy" -- is equivalent to above.
-- d1 $ fit' 1 4 (run 4) "[0 3*2 2 1 0 3*2 2 [1*8 ~]]/2" $ sound "cc:5*4"
